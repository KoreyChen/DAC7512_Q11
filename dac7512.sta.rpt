TimeQuest Timing Analyzer report for dac7512
Thu May 25 23:43:40 2017
Quartus II 64-Bit Version 11.0 Build 157 04/27/2011 SJ Full Version


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Fmax Summary
  6. Setup Summary
  7. Hold Summary
  8. Recovery Summary
  9. Removal Summary
 10. Minimum Pulse Width Summary
 11. Setup: 'div_clk'
 12. Setup: 'clk'
 13. Hold: 'clk'
 14. Hold: 'div_clk'
 15. Minimum Pulse Width: 'clk'
 16. Minimum Pulse Width: 'div_clk'
 17. Clock to Output Times
 18. Minimum Clock to Output Times
 19. Setup Transfers
 20. Hold Transfers
 21. Report TCCS
 22. Report RSKM
 23. Unconstrained Paths
 24. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2011 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                      ;
+--------------------+---------------------------------------------------+
; Quartus II Version ; Version 11.0 Build 157 04/27/2011 SJ Full Version ;
; Revision Name      ; dac7512                                           ;
; Device Family      ; Cyclone                                           ;
; Device Name        ; EP1C3T100C8                                       ;
; Timing Models      ; Final                                             ;
; Delay Model        ; Slow Model                                        ;
; Rise/Fall Delays   ; Unavailable                                       ;
+--------------------+---------------------------------------------------+


+------------------------------------------+
; Parallel Compilation                     ;
+----------------------------+-------------+
; Processors                 ; Number      ;
+----------------------------+-------------+
; Number detected on machine ; 2           ;
; Maximum allowed            ; 2           ;
;                            ;             ;
; Average used               ; 1.00        ;
; Maximum used               ; 2           ;
;                            ;             ;
; Usage by Processor         ; % Time Used ;
;     1 processor            ; 100.0%      ;
;     2 processors           ; < 0.1%      ;
+----------------------------+-------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                              ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-------------+
; Clock Name ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets     ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-------------+
; clk        ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { clk }     ;
; div_clk    ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { div_clk } ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-------------+


+--------------------------------------------------+
; Fmax Summary                                     ;
+------------+-----------------+------------+------+
; Fmax       ; Restricted Fmax ; Clock Name ; Note ;
+------------+-----------------+------------+------+
; 179.47 MHz ; 179.47 MHz      ; div_clk    ;      ;
; 256.21 MHz ; 256.21 MHz      ; clk        ;      ;
+------------+-----------------+------------+------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+----------------------------------+
; Setup Summary                    ;
+---------+--------+---------------+
; Clock   ; Slack  ; End Point TNS ;
+---------+--------+---------------+
; div_clk ; -4.572 ; -56.839       ;
; clk     ; -2.903 ; -26.019       ;
+---------+--------+---------------+


+----------------------------------+
; Hold Summary                     ;
+---------+--------+---------------+
; Clock   ; Slack  ; End Point TNS ;
+---------+--------+---------------+
; clk     ; -1.523 ; -1.523        ;
; div_clk ; 1.108  ; 0.000         ;
+---------+--------+---------------+


--------------------
; Recovery Summary ;
--------------------
No paths to report.


-------------------
; Removal Summary ;
-------------------
No paths to report.


+----------------------------------+
; Minimum Pulse Width Summary      ;
+---------+--------+---------------+
; Clock   ; Slack  ; End Point TNS ;
+---------+--------+---------------+
; clk     ; -1.583 ; -25.307       ;
; div_clk ; -1.318 ; -39.540       ;
+---------+--------+---------------+


+----------------------------------------------------------------------------------------------------------------+
; Setup: 'div_clk'                                                                                               ;
+--------+----------------+----------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node      ; To Node        ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+----------------+----------------+--------------+-------------+--------------+------------+------------+
; -4.572 ; clk_count[1]   ; count[0]       ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 5.535      ;
; -4.572 ; clk_count[1]   ; count[1]       ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 5.535      ;
; -4.572 ; clk_count[1]   ; count[3]       ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 5.535      ;
; -4.572 ; clk_count[1]   ; count[2]       ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 5.535      ;
; -4.572 ; clk_count[1]   ; count[4]       ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 5.535      ;
; -4.572 ; clk_count[2]   ; clk_count[2]   ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 5.535      ;
; -4.391 ; state.ST_Data  ; count[0]       ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 5.354      ;
; -4.391 ; state.ST_Data  ; count[1]       ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 5.354      ;
; -4.391 ; state.ST_Data  ; count[3]       ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 5.354      ;
; -4.391 ; state.ST_Data  ; count[2]       ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 5.354      ;
; -4.391 ; state.ST_Data  ; count[4]       ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 5.354      ;
; -4.366 ; clk_count[1]   ; clk_count[2]   ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 5.329      ;
; -4.337 ; clk_count[2]   ; clk_count[1]   ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 5.300      ;
; -4.268 ; clk_count[0]   ; count[0]       ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 5.231      ;
; -4.268 ; clk_count[0]   ; count[1]       ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 5.231      ;
; -4.268 ; clk_count[0]   ; count[3]       ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 5.231      ;
; -4.268 ; clk_count[0]   ; count[2]       ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 5.231      ;
; -4.268 ; clk_count[0]   ; count[4]       ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 5.231      ;
; -4.131 ; clk_count[1]   ; clk_count[1]   ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 5.094      ;
; -4.102 ; clk_count[2]   ; count[0]       ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 5.065      ;
; -4.102 ; clk_count[2]   ; count[1]       ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 5.065      ;
; -4.102 ; clk_count[2]   ; count[3]       ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 5.065      ;
; -4.102 ; clk_count[2]   ; count[2]       ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 5.065      ;
; -4.102 ; clk_count[2]   ; count[4]       ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 5.065      ;
; -4.098 ; clk_count[1]   ; state.ST_Stop  ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 5.061      ;
; -4.098 ; clk_count[1]   ; state.ST_Start ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 5.061      ;
; -4.080 ; clk_count[0]   ; clk_count[2]   ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 5.043      ;
; -4.037 ; clk_count[2]   ; state.ST_Stop  ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 5.000      ;
; -3.805 ; clk_count[2]   ; state.ST_Start ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 4.768      ;
; -3.637 ; clk_count[0]   ; state.ST_Stop  ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 4.600      ;
; -3.637 ; clk_count[0]   ; state.ST_Start ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 4.600      ;
; -3.414 ; count[0]       ; din~reg0       ; div_clk      ; div_clk     ; 1.000        ; -0.038     ; 4.339      ;
; -3.408 ; clk_count[1]   ; din~reg0       ; div_clk      ; div_clk     ; 1.000        ; -0.038     ; 4.333      ;
; -3.349 ; count[2]       ; din~reg0       ; div_clk      ; div_clk     ; 1.000        ; -0.038     ; 4.274      ;
; -3.251 ; clk_count[2]   ; sclk~reg0      ; div_clk      ; div_clk     ; 1.000        ; -0.038     ; 4.176      ;
; -3.232 ; count[1]       ; din~reg0       ; div_clk      ; div_clk     ; 1.000        ; -0.038     ; 4.157      ;
; -3.227 ; state.ST_Data  ; din~reg0       ; div_clk      ; div_clk     ; 1.000        ; -0.038     ; 4.152      ;
; -3.194 ; state.ST_Start ; state.ST_Stop  ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 4.157      ;
; -3.194 ; state.ST_Start ; state.ST_Start ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 4.157      ;
; -3.152 ; state.ST_Data  ; state.ST_Stop  ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 4.115      ;
; -3.152 ; state.ST_Data  ; state.ST_Start ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 4.115      ;
; -3.132 ; state.ST_Start ; sync~reg0      ; div_clk      ; div_clk     ; 1.000        ; -0.038     ; 4.057      ;
; -3.126 ; state.ST_Start ; sclk~reg0      ; div_clk      ; div_clk     ; 1.000        ; -0.038     ; 4.051      ;
; -3.104 ; clk_count[0]   ; din~reg0       ; div_clk      ; div_clk     ; 1.000        ; -0.038     ; 4.029      ;
; -3.045 ; clk_count[1]   ; sclk~reg0      ; div_clk      ; div_clk     ; 1.000        ; -0.038     ; 3.970      ;
; -3.042 ; data_reg[10]   ; din~reg0       ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 4.005      ;
; -2.938 ; clk_count[2]   ; din~reg0       ; div_clk      ; div_clk     ; 1.000        ; -0.038     ; 3.863      ;
; -2.893 ; clk_count[1]   ; state.ST_Data  ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 3.856      ;
; -2.838 ; clk_count[0]   ; sclk~reg0      ; div_clk      ; div_clk     ; 1.000        ; -0.038     ; 3.763      ;
; -2.834 ; clk_count[0]   ; sync~reg0      ; div_clk      ; div_clk     ; 1.000        ; -0.038     ; 3.759      ;
; -2.753 ; clk_count[2]   ; state.ST_Data  ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 3.716      ;
; -2.702 ; clk_count[2]   ; data_reg[10]   ; div_clk      ; div_clk     ; 1.000        ; -0.038     ; 3.627      ;
; -2.598 ; state.ST_Data  ; sclk~reg0      ; div_clk      ; div_clk     ; 1.000        ; -0.038     ; 3.523      ;
; -2.594 ; clk_count[0]   ; state.ST_Data  ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 3.557      ;
; -2.593 ; state.ST_Data  ; sync~reg0      ; div_clk      ; div_clk     ; 1.000        ; -0.038     ; 3.518      ;
; -2.496 ; clk_count[1]   ; data_reg[10]   ; div_clk      ; div_clk     ; 1.000        ; -0.038     ; 3.421      ;
; -2.481 ; count[3]       ; din~reg0       ; div_clk      ; div_clk     ; 1.000        ; -0.038     ; 3.406      ;
; -2.414 ; count[2]       ; count[3]       ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 3.377      ;
; -2.252 ; clk_count[0]   ; data_reg[10]   ; div_clk      ; div_clk     ; 1.000        ; -0.038     ; 3.177      ;
; -2.244 ; clk_count[1]   ; sync~reg0      ; div_clk      ; div_clk     ; 1.000        ; -0.038     ; 3.169      ;
; -2.226 ; count[2]       ; count[4]       ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 3.189      ;
; -2.207 ; clk_count[2]   ; sync~reg0      ; div_clk      ; div_clk     ; 1.000        ; -0.038     ; 3.132      ;
; -2.028 ; state.ST_Start ; state.ST_Data  ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 2.991      ;
; -1.980 ; state.ST_Start ; data_reg[10]   ; div_clk      ; div_clk     ; 1.000        ; -0.038     ; 2.905      ;
; -1.956 ; count[4]       ; state.ST_Stop  ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 2.919      ;
; -1.956 ; count[4]       ; state.ST_Start ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 2.919      ;
; -1.894 ; count[0]       ; count[3]       ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 2.857      ;
; -1.763 ; count[3]       ; count[4]       ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 2.726      ;
; -1.717 ; count[1]       ; count[3]       ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 2.680      ;
; -1.706 ; count[0]       ; count[4]       ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 2.669      ;
; -1.608 ; count[4]       ; din~reg0       ; div_clk      ; div_clk     ; 1.000        ; -0.038     ; 2.533      ;
; -1.556 ; count[2]       ; count[2]       ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 2.519      ;
; -1.550 ; state.ST_Start ; clk_count[2]   ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 2.513      ;
; -1.549 ; count[0]       ; count[2]       ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 2.512      ;
; -1.529 ; count[1]       ; count[4]       ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 2.492      ;
; -1.482 ; state.ST_Data  ; clk_count[0]   ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 2.445      ;
; -1.477 ; clk_count[0]   ; clk_count[1]   ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 2.440      ;
; -1.460 ; state.ST_Start ; clk_count[1]   ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 2.423      ;
; -1.438 ; count[3]       ; count[3]       ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 2.401      ;
; -1.372 ; count[1]       ; count[2]       ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 2.335      ;
; -1.362 ; clk_count[1]   ; clk_count[0]   ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 2.325      ;
; -1.270 ; count[4]       ; state.ST_Data  ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 2.233      ;
; -1.222 ; count[0]       ; count[1]       ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 2.185      ;
; -1.191 ; clk_count[0]   ; clk_count[0]   ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 2.154      ;
; -1.186 ; count[4]       ; count[4]       ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 2.149      ;
; -1.051 ; state.ST_Stop  ; clk_count[2]   ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 2.014      ;
; -1.040 ; count[1]       ; count[1]       ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 2.003      ;
; -1.001 ; state.ST_Data  ; clk_count[2]   ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 1.964      ;
; -0.856 ; sync~reg0      ; sync~reg0      ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 1.819      ;
; -0.816 ; state.ST_Stop  ; clk_count[1]   ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 1.779      ;
; -0.766 ; state.ST_Data  ; clk_count[1]   ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 1.729      ;
; -0.722 ; state.ST_Start ; clk_count[0]   ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 1.685      ;
; -0.531 ; sclk~reg0      ; sclk~reg0      ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 1.494      ;
; -0.372 ; data_reg[10]   ; data_reg[10]   ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 1.335      ;
; -0.345 ; clk_count[2]   ; clk_count[0]   ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 1.308      ;
; -0.293 ; count[0]       ; count[0]       ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 1.256      ;
; -0.160 ; state.ST_Data  ; state.ST_Data  ; div_clk      ; div_clk     ; 1.000        ; 0.000      ; 1.123      ;
+--------+----------------+----------------+--------------+-------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------+
; Setup: 'clk'                                                                                               ;
+--------+--------------+--------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node    ; To Node      ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+--------------+--------------+--------------+-------------+--------------+------------+------------+
; -2.903 ; div_count[1] ; div_count[1] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.866      ;
; -2.903 ; div_count[1] ; div_count[2] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.866      ;
; -2.903 ; div_count[1] ; div_count[3] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.866      ;
; -2.903 ; div_count[1] ; div_count[4] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.866      ;
; -2.903 ; div_count[1] ; div_count[5] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.866      ;
; -2.903 ; div_count[1] ; div_count[6] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.866      ;
; -2.903 ; div_count[1] ; div_count[7] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.866      ;
; -2.903 ; div_count[1] ; div_count[0] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.866      ;
; -2.795 ; div_count[1] ; div_clk      ; clk          ; clk         ; 1.000        ; 0.038      ; 3.796      ;
; -2.729 ; div_count[4] ; div_count[1] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.692      ;
; -2.729 ; div_count[4] ; div_count[2] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.692      ;
; -2.729 ; div_count[4] ; div_count[3] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.692      ;
; -2.729 ; div_count[4] ; div_count[4] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.692      ;
; -2.729 ; div_count[4] ; div_count[5] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.692      ;
; -2.729 ; div_count[4] ; div_count[6] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.692      ;
; -2.729 ; div_count[4] ; div_count[7] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.692      ;
; -2.729 ; div_count[4] ; div_count[0] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.692      ;
; -2.630 ; div_count[2] ; div_count[1] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.593      ;
; -2.630 ; div_count[2] ; div_count[2] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.593      ;
; -2.630 ; div_count[2] ; div_count[3] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.593      ;
; -2.630 ; div_count[2] ; div_count[4] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.593      ;
; -2.630 ; div_count[2] ; div_count[5] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.593      ;
; -2.630 ; div_count[2] ; div_count[6] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.593      ;
; -2.630 ; div_count[2] ; div_count[7] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.593      ;
; -2.630 ; div_count[2] ; div_count[0] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.593      ;
; -2.621 ; div_count[4] ; div_clk      ; clk          ; clk         ; 1.000        ; 0.038      ; 3.622      ;
; -2.614 ; div_count[7] ; div_count[1] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.577      ;
; -2.614 ; div_count[7] ; div_count[2] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.577      ;
; -2.614 ; div_count[7] ; div_count[3] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.577      ;
; -2.614 ; div_count[7] ; div_count[4] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.577      ;
; -2.614 ; div_count[7] ; div_count[5] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.577      ;
; -2.614 ; div_count[7] ; div_count[6] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.577      ;
; -2.614 ; div_count[7] ; div_count[7] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.577      ;
; -2.614 ; div_count[7] ; div_count[0] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.577      ;
; -2.557 ; div_count[6] ; div_count[1] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.520      ;
; -2.557 ; div_count[6] ; div_count[2] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.520      ;
; -2.557 ; div_count[6] ; div_count[3] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.520      ;
; -2.557 ; div_count[6] ; div_count[4] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.520      ;
; -2.557 ; div_count[6] ; div_count[5] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.520      ;
; -2.557 ; div_count[6] ; div_count[6] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.520      ;
; -2.557 ; div_count[6] ; div_count[7] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.520      ;
; -2.557 ; div_count[6] ; div_count[0] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.520      ;
; -2.522 ; div_count[2] ; div_clk      ; clk          ; clk         ; 1.000        ; 0.038      ; 3.523      ;
; -2.506 ; div_count[7] ; div_clk      ; clk          ; clk         ; 1.000        ; 0.038      ; 3.507      ;
; -2.451 ; div_count[5] ; div_count[1] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.414      ;
; -2.451 ; div_count[5] ; div_count[2] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.414      ;
; -2.451 ; div_count[5] ; div_count[3] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.414      ;
; -2.451 ; div_count[5] ; div_count[4] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.414      ;
; -2.451 ; div_count[5] ; div_count[5] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.414      ;
; -2.451 ; div_count[5] ; div_count[6] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.414      ;
; -2.451 ; div_count[5] ; div_count[7] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.414      ;
; -2.451 ; div_count[5] ; div_count[0] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.414      ;
; -2.449 ; div_count[6] ; div_clk      ; clk          ; clk         ; 1.000        ; 0.038      ; 3.450      ;
; -2.437 ; div_count[3] ; div_count[1] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.400      ;
; -2.437 ; div_count[3] ; div_count[2] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.400      ;
; -2.437 ; div_count[3] ; div_count[3] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.400      ;
; -2.437 ; div_count[3] ; div_count[4] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.400      ;
; -2.437 ; div_count[3] ; div_count[5] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.400      ;
; -2.437 ; div_count[3] ; div_count[6] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.400      ;
; -2.437 ; div_count[3] ; div_count[7] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.400      ;
; -2.437 ; div_count[3] ; div_count[0] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.400      ;
; -2.343 ; div_count[5] ; div_clk      ; clk          ; clk         ; 1.000        ; 0.038      ; 3.344      ;
; -2.329 ; div_count[3] ; div_clk      ; clk          ; clk         ; 1.000        ; 0.038      ; 3.330      ;
; -1.453 ; div_count[0] ; div_count[5] ; clk          ; clk         ; 1.000        ; 0.000      ; 2.416      ;
; -1.453 ; div_count[0] ; div_count[6] ; clk          ; clk         ; 1.000        ; 0.000      ; 2.416      ;
; -1.453 ; div_count[0] ; div_count[7] ; clk          ; clk         ; 1.000        ; 0.000      ; 2.416      ;
; -1.238 ; div_count[0] ; div_count[4] ; clk          ; clk         ; 1.000        ; 0.000      ; 2.201      ;
; -1.158 ; div_count[0] ; div_count[3] ; clk          ; clk         ; 1.000        ; 0.000      ; 2.121      ;
; -1.078 ; div_count[0] ; div_count[2] ; clk          ; clk         ; 1.000        ; 0.000      ; 2.041      ;
; -0.998 ; div_count[0] ; div_count[1] ; clk          ; clk         ; 1.000        ; 0.000      ; 1.961      ;
; -0.386 ; div_count[0] ; div_count[0] ; clk          ; clk         ; 1.000        ; 0.000      ; 1.349      ;
; 1.971  ; div_clk      ; div_clk      ; div_clk      ; clk         ; 0.500        ; 2.768      ; 1.484      ;
; 2.471  ; div_clk      ; div_clk      ; div_clk      ; clk         ; 1.000        ; 2.768      ; 1.484      ;
+--------+--------------+--------------+--------------+-------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------+
; Hold: 'clk'                                                                                                ;
+--------+--------------+--------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node    ; To Node      ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+--------------+--------------+--------------+-------------+--------------+------------+------------+
; -1.523 ; div_clk      ; div_clk      ; div_clk      ; clk         ; 0.000        ; 2.768      ; 1.484      ;
; -1.023 ; div_clk      ; div_clk      ; div_clk      ; clk         ; -0.500       ; 2.768      ; 1.484      ;
; 1.329  ; div_count[4] ; div_count[4] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.344      ;
; 1.334  ; div_count[0] ; div_count[0] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.349      ;
; 1.341  ; div_count[5] ; div_count[5] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.356      ;
; 1.348  ; div_count[3] ; div_count[3] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.363      ;
; 1.482  ; div_count[1] ; div_count[1] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.497      ;
; 1.492  ; div_count[2] ; div_count[2] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.507      ;
; 1.492  ; div_count[7] ; div_count[7] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.507      ;
; 1.562  ; div_count[6] ; div_count[6] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.577      ;
; 1.933  ; div_count[0] ; div_count[1] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.948      ;
; 1.940  ; div_count[5] ; div_count[6] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.955      ;
; 1.947  ; div_count[3] ; div_count[4] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.962      ;
; 2.011  ; div_count[0] ; div_count[2] ; clk          ; clk         ; 0.000        ; 0.000      ; 2.026      ;
; 2.018  ; div_count[5] ; div_count[7] ; clk          ; clk         ; 0.000        ; 0.000      ; 2.033      ;
; 2.089  ; div_count[0] ; div_count[3] ; clk          ; clk         ; 0.000        ; 0.000      ; 2.104      ;
; 2.091  ; div_count[1] ; div_count[2] ; clk          ; clk         ; 0.000        ; 0.000      ; 2.106      ;
; 2.101  ; div_count[2] ; div_count[3] ; clk          ; clk         ; 0.000        ; 0.000      ; 2.116      ;
; 2.144  ; div_count[4] ; div_count[5] ; clk          ; clk         ; 0.000        ; 0.000      ; 2.159      ;
; 2.144  ; div_count[4] ; div_count[6] ; clk          ; clk         ; 0.000        ; 0.000      ; 2.159      ;
; 2.144  ; div_count[4] ; div_count[7] ; clk          ; clk         ; 0.000        ; 0.000      ; 2.159      ;
; 2.161  ; div_count[6] ; div_count[7] ; clk          ; clk         ; 0.000        ; 0.000      ; 2.176      ;
; 2.167  ; div_count[0] ; div_count[4] ; clk          ; clk         ; 0.000        ; 0.000      ; 2.182      ;
; 2.169  ; div_count[1] ; div_count[3] ; clk          ; clk         ; 0.000        ; 0.000      ; 2.184      ;
; 2.169  ; div_count[3] ; div_count[5] ; clk          ; clk         ; 0.000        ; 0.000      ; 2.184      ;
; 2.169  ; div_count[3] ; div_count[6] ; clk          ; clk         ; 0.000        ; 0.000      ; 2.184      ;
; 2.169  ; div_count[3] ; div_count[7] ; clk          ; clk         ; 0.000        ; 0.000      ; 2.184      ;
; 2.179  ; div_count[2] ; div_count[4] ; clk          ; clk         ; 0.000        ; 0.000      ; 2.194      ;
; 2.247  ; div_count[1] ; div_count[4] ; clk          ; clk         ; 0.000        ; 0.000      ; 2.262      ;
; 2.395  ; div_count[0] ; div_count[5] ; clk          ; clk         ; 0.000        ; 0.000      ; 2.410      ;
; 2.395  ; div_count[0] ; div_count[6] ; clk          ; clk         ; 0.000        ; 0.000      ; 2.410      ;
; 2.395  ; div_count[0] ; div_count[7] ; clk          ; clk         ; 0.000        ; 0.000      ; 2.410      ;
; 2.405  ; div_count[2] ; div_count[5] ; clk          ; clk         ; 0.000        ; 0.000      ; 2.420      ;
; 2.405  ; div_count[2] ; div_count[6] ; clk          ; clk         ; 0.000        ; 0.000      ; 2.420      ;
; 2.405  ; div_count[2] ; div_count[7] ; clk          ; clk         ; 0.000        ; 0.000      ; 2.420      ;
; 2.475  ; div_count[1] ; div_count[5] ; clk          ; clk         ; 0.000        ; 0.000      ; 2.490      ;
; 2.475  ; div_count[1] ; div_count[6] ; clk          ; clk         ; 0.000        ; 0.000      ; 2.490      ;
; 2.475  ; div_count[1] ; div_count[7] ; clk          ; clk         ; 0.000        ; 0.000      ; 2.490      ;
; 3.277  ; div_count[3] ; div_clk      ; clk          ; clk         ; 0.000        ; 0.038      ; 3.330      ;
; 3.291  ; div_count[5] ; div_clk      ; clk          ; clk         ; 0.000        ; 0.038      ; 3.344      ;
; 3.385  ; div_count[3] ; div_count[1] ; clk          ; clk         ; 0.000        ; 0.000      ; 3.400      ;
; 3.385  ; div_count[3] ; div_count[2] ; clk          ; clk         ; 0.000        ; 0.000      ; 3.400      ;
; 3.385  ; div_count[3] ; div_count[0] ; clk          ; clk         ; 0.000        ; 0.000      ; 3.400      ;
; 3.397  ; div_count[6] ; div_clk      ; clk          ; clk         ; 0.000        ; 0.038      ; 3.450      ;
; 3.399  ; div_count[5] ; div_count[1] ; clk          ; clk         ; 0.000        ; 0.000      ; 3.414      ;
; 3.399  ; div_count[5] ; div_count[2] ; clk          ; clk         ; 0.000        ; 0.000      ; 3.414      ;
; 3.399  ; div_count[5] ; div_count[3] ; clk          ; clk         ; 0.000        ; 0.000      ; 3.414      ;
; 3.399  ; div_count[5] ; div_count[4] ; clk          ; clk         ; 0.000        ; 0.000      ; 3.414      ;
; 3.399  ; div_count[5] ; div_count[0] ; clk          ; clk         ; 0.000        ; 0.000      ; 3.414      ;
; 3.454  ; div_count[7] ; div_clk      ; clk          ; clk         ; 0.000        ; 0.038      ; 3.507      ;
; 3.470  ; div_count[2] ; div_clk      ; clk          ; clk         ; 0.000        ; 0.038      ; 3.523      ;
; 3.505  ; div_count[6] ; div_count[1] ; clk          ; clk         ; 0.000        ; 0.000      ; 3.520      ;
; 3.505  ; div_count[6] ; div_count[2] ; clk          ; clk         ; 0.000        ; 0.000      ; 3.520      ;
; 3.505  ; div_count[6] ; div_count[3] ; clk          ; clk         ; 0.000        ; 0.000      ; 3.520      ;
; 3.505  ; div_count[6] ; div_count[4] ; clk          ; clk         ; 0.000        ; 0.000      ; 3.520      ;
; 3.505  ; div_count[6] ; div_count[5] ; clk          ; clk         ; 0.000        ; 0.000      ; 3.520      ;
; 3.505  ; div_count[6] ; div_count[0] ; clk          ; clk         ; 0.000        ; 0.000      ; 3.520      ;
; 3.562  ; div_count[7] ; div_count[1] ; clk          ; clk         ; 0.000        ; 0.000      ; 3.577      ;
; 3.562  ; div_count[7] ; div_count[2] ; clk          ; clk         ; 0.000        ; 0.000      ; 3.577      ;
; 3.562  ; div_count[7] ; div_count[3] ; clk          ; clk         ; 0.000        ; 0.000      ; 3.577      ;
; 3.562  ; div_count[7] ; div_count[4] ; clk          ; clk         ; 0.000        ; 0.000      ; 3.577      ;
; 3.562  ; div_count[7] ; div_count[5] ; clk          ; clk         ; 0.000        ; 0.000      ; 3.577      ;
; 3.562  ; div_count[7] ; div_count[6] ; clk          ; clk         ; 0.000        ; 0.000      ; 3.577      ;
; 3.562  ; div_count[7] ; div_count[0] ; clk          ; clk         ; 0.000        ; 0.000      ; 3.577      ;
; 3.569  ; div_count[4] ; div_clk      ; clk          ; clk         ; 0.000        ; 0.038      ; 3.622      ;
; 3.578  ; div_count[2] ; div_count[1] ; clk          ; clk         ; 0.000        ; 0.000      ; 3.593      ;
; 3.578  ; div_count[2] ; div_count[0] ; clk          ; clk         ; 0.000        ; 0.000      ; 3.593      ;
; 3.677  ; div_count[4] ; div_count[1] ; clk          ; clk         ; 0.000        ; 0.000      ; 3.692      ;
; 3.677  ; div_count[4] ; div_count[2] ; clk          ; clk         ; 0.000        ; 0.000      ; 3.692      ;
; 3.677  ; div_count[4] ; div_count[3] ; clk          ; clk         ; 0.000        ; 0.000      ; 3.692      ;
; 3.677  ; div_count[4] ; div_count[0] ; clk          ; clk         ; 0.000        ; 0.000      ; 3.692      ;
; 3.743  ; div_count[1] ; div_clk      ; clk          ; clk         ; 0.000        ; 0.038      ; 3.796      ;
; 3.851  ; div_count[1] ; div_count[0] ; clk          ; clk         ; 0.000        ; 0.000      ; 3.866      ;
+--------+--------------+--------------+--------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------+
; Hold: 'div_clk'                                                                                               ;
+-------+----------------+----------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node      ; To Node        ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+----------------+----------------+--------------+-------------+--------------+------------+------------+
; 1.108 ; state.ST_Data  ; state.ST_Data  ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 1.123      ;
; 1.241 ; count[0]       ; count[0]       ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 1.256      ;
; 1.256 ; sync~reg0      ; sync~reg0      ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 1.271      ;
; 1.293 ; clk_count[2]   ; clk_count[0]   ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 1.308      ;
; 1.320 ; data_reg[10]   ; data_reg[10]   ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 1.335      ;
; 1.391 ; state.ST_Data  ; state.ST_Stop  ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 1.406      ;
; 1.396 ; clk_count[0]   ; clk_count[0]   ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 1.411      ;
; 1.401 ; clk_count[0]   ; clk_count[1]   ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 1.416      ;
; 1.479 ; sclk~reg0      ; sclk~reg0      ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 1.494      ;
; 1.537 ; clk_count[2]   ; clk_count[2]   ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 1.552      ;
; 1.538 ; clk_count[1]   ; clk_count[1]   ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 1.553      ;
; 1.670 ; state.ST_Start ; clk_count[0]   ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 1.685      ;
; 1.714 ; state.ST_Data  ; clk_count[1]   ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 1.729      ;
; 1.764 ; state.ST_Stop  ; clk_count[1]   ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 1.779      ;
; 1.899 ; count[4]       ; state.ST_Stop  ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 1.914      ;
; 1.949 ; state.ST_Data  ; clk_count[2]   ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 1.964      ;
; 1.954 ; clk_count[0]   ; state.ST_Data  ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 1.969      ;
; 1.988 ; count[1]       ; count[1]       ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 2.003      ;
; 1.999 ; state.ST_Stop  ; clk_count[2]   ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 2.014      ;
; 2.084 ; clk_count[0]   ; state.ST_Stop  ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 2.099      ;
; 2.122 ; clk_count[2]   ; state.ST_Data  ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 2.137      ;
; 2.128 ; clk_count[1]   ; clk_count[2]   ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 2.143      ;
; 2.134 ; count[4]       ; count[4]       ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 2.149      ;
; 2.170 ; count[0]       ; count[1]       ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 2.185      ;
; 2.218 ; count[4]       ; state.ST_Data  ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 2.233      ;
; 2.267 ; clk_count[0]   ; clk_count[2]   ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 2.282      ;
; 2.307 ; count[1]       ; count[2]       ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 2.322      ;
; 2.310 ; clk_count[1]   ; clk_count[0]   ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 2.325      ;
; 2.330 ; clk_count[2]   ; clk_count[1]   ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 2.345      ;
; 2.386 ; count[3]       ; count[3]       ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 2.401      ;
; 2.408 ; state.ST_Start ; clk_count[1]   ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 2.423      ;
; 2.415 ; clk_count[1]   ; state.ST_Data  ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 2.430      ;
; 2.430 ; state.ST_Data  ; clk_count[0]   ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 2.445      ;
; 2.460 ; count[1]       ; count[4]       ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 2.475      ;
; 2.482 ; count[0]       ; count[2]       ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 2.497      ;
; 2.498 ; state.ST_Start ; clk_count[2]   ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 2.513      ;
; 2.504 ; count[2]       ; count[2]       ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 2.519      ;
; 2.556 ; count[4]       ; din~reg0       ; div_clk      ; div_clk     ; 0.000        ; -0.038     ; 2.533      ;
; 2.587 ; count[1]       ; din~reg0       ; div_clk      ; div_clk     ; 0.000        ; -0.038     ; 2.564      ;
; 2.635 ; count[0]       ; count[4]       ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 2.650      ;
; 2.650 ; count[1]       ; count[3]       ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 2.665      ;
; 2.696 ; count[3]       ; count[4]       ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 2.711      ;
; 2.825 ; count[0]       ; count[3]       ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 2.840      ;
; 2.904 ; count[4]       ; state.ST_Start ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 2.919      ;
; 2.928 ; state.ST_Start ; data_reg[10]   ; div_clk      ; div_clk     ; 0.000        ; -0.038     ; 2.905      ;
; 2.948 ; clk_count[1]   ; sclk~reg0      ; div_clk      ; div_clk     ; 0.000        ; -0.038     ; 2.925      ;
; 2.976 ; state.ST_Start ; state.ST_Data  ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 2.991      ;
; 3.155 ; clk_count[2]   ; sync~reg0      ; div_clk      ; div_clk     ; 0.000        ; -0.038     ; 3.132      ;
; 3.156 ; clk_count[2]   ; sclk~reg0      ; div_clk      ; div_clk     ; 0.000        ; -0.038     ; 3.133      ;
; 3.157 ; count[2]       ; count[4]       ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 3.172      ;
; 3.192 ; clk_count[1]   ; sync~reg0      ; div_clk      ; div_clk     ; 0.000        ; -0.038     ; 3.169      ;
; 3.200 ; clk_count[0]   ; data_reg[10]   ; div_clk      ; div_clk     ; 0.000        ; -0.038     ; 3.177      ;
; 3.347 ; count[2]       ; count[3]       ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 3.362      ;
; 3.429 ; count[3]       ; din~reg0       ; div_clk      ; div_clk     ; 0.000        ; -0.038     ; 3.406      ;
; 3.444 ; clk_count[1]   ; data_reg[10]   ; div_clk      ; div_clk     ; 0.000        ; -0.038     ; 3.421      ;
; 3.541 ; state.ST_Data  ; sync~reg0      ; div_clk      ; div_clk     ; 0.000        ; -0.038     ; 3.518      ;
; 3.546 ; state.ST_Data  ; sclk~reg0      ; div_clk      ; div_clk     ; 0.000        ; -0.038     ; 3.523      ;
; 3.650 ; clk_count[2]   ; data_reg[10]   ; div_clk      ; div_clk     ; 0.000        ; -0.038     ; 3.627      ;
; 3.782 ; clk_count[0]   ; sync~reg0      ; div_clk      ; div_clk     ; 0.000        ; -0.038     ; 3.759      ;
; 3.786 ; clk_count[0]   ; sclk~reg0      ; div_clk      ; div_clk     ; 0.000        ; -0.038     ; 3.763      ;
; 3.886 ; clk_count[2]   ; din~reg0       ; div_clk      ; div_clk     ; 0.000        ; -0.038     ; 3.863      ;
; 3.990 ; data_reg[10]   ; din~reg0       ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 4.005      ;
; 4.052 ; clk_count[0]   ; din~reg0       ; div_clk      ; div_clk     ; 0.000        ; -0.038     ; 4.029      ;
; 4.074 ; state.ST_Start ; sclk~reg0      ; div_clk      ; div_clk     ; 0.000        ; -0.038     ; 4.051      ;
; 4.080 ; state.ST_Start ; sync~reg0      ; div_clk      ; div_clk     ; 0.000        ; -0.038     ; 4.057      ;
; 4.100 ; state.ST_Data  ; state.ST_Start ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 4.115      ;
; 4.142 ; state.ST_Start ; state.ST_Stop  ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 4.157      ;
; 4.142 ; state.ST_Start ; state.ST_Start ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 4.157      ;
; 4.175 ; state.ST_Data  ; din~reg0       ; div_clk      ; div_clk     ; 0.000        ; -0.038     ; 4.152      ;
; 4.228 ; clk_count[0]   ; state.ST_Start ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 4.243      ;
; 4.297 ; count[2]       ; din~reg0       ; div_clk      ; div_clk     ; 0.000        ; -0.038     ; 4.274      ;
; 4.356 ; clk_count[1]   ; din~reg0       ; div_clk      ; div_clk     ; 0.000        ; -0.038     ; 4.333      ;
; 4.362 ; count[0]       ; din~reg0       ; div_clk      ; div_clk     ; 0.000        ; -0.038     ; 4.339      ;
; 4.387 ; clk_count[2]   ; state.ST_Stop  ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 4.402      ;
; 4.387 ; clk_count[2]   ; state.ST_Start ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 4.402      ;
; 4.527 ; clk_count[1]   ; state.ST_Stop  ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 4.542      ;
; 4.527 ; clk_count[1]   ; state.ST_Start ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 4.542      ;
; 5.050 ; clk_count[2]   ; count[0]       ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 5.065      ;
; 5.050 ; clk_count[2]   ; count[1]       ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 5.065      ;
; 5.050 ; clk_count[2]   ; count[3]       ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 5.065      ;
; 5.050 ; clk_count[2]   ; count[2]       ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 5.065      ;
; 5.050 ; clk_count[2]   ; count[4]       ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 5.065      ;
; 5.216 ; clk_count[0]   ; count[0]       ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 5.231      ;
; 5.216 ; clk_count[0]   ; count[1]       ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 5.231      ;
; 5.216 ; clk_count[0]   ; count[3]       ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 5.231      ;
; 5.216 ; clk_count[0]   ; count[2]       ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 5.231      ;
; 5.216 ; clk_count[0]   ; count[4]       ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 5.231      ;
; 5.339 ; state.ST_Data  ; count[0]       ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 5.354      ;
; 5.339 ; state.ST_Data  ; count[1]       ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 5.354      ;
; 5.339 ; state.ST_Data  ; count[3]       ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 5.354      ;
; 5.339 ; state.ST_Data  ; count[2]       ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 5.354      ;
; 5.339 ; state.ST_Data  ; count[4]       ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 5.354      ;
; 5.520 ; clk_count[1]   ; count[0]       ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 5.535      ;
; 5.520 ; clk_count[1]   ; count[1]       ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 5.535      ;
; 5.520 ; clk_count[1]   ; count[3]       ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 5.535      ;
; 5.520 ; clk_count[1]   ; count[2]       ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 5.535      ;
; 5.520 ; clk_count[1]   ; count[4]       ; div_clk      ; div_clk     ; 0.000        ; 0.000      ; 5.535      ;
+-------+----------------+----------------+--------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------+
; Minimum Pulse Width: 'clk'                                                                        ;
+--------+--------------+----------------+------------------+-------+------------+------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target           ;
+--------+--------------+----------------+------------------+-------+------------+------------------+
; -1.583 ; 1.000        ; 2.583          ; Port Rate        ; clk   ; Rise       ; clk              ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; div_clk          ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; div_clk          ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; div_count[0]     ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; div_count[0]     ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; div_count[1]     ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; div_count[1]     ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; div_count[2]     ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; div_count[2]     ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; div_count[3]     ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; div_count[3]     ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; div_count[4]     ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; div_count[4]     ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; div_count[5]     ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; div_count[5]     ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; div_count[6]     ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; div_count[6]     ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; div_count[7]     ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; div_count[7]     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk|combout      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk|combout      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; div_clk|clk      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; div_clk|clk      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; div_count[0]|clk ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; div_count[0]|clk ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; div_count[1]|clk ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; div_count[1]|clk ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; div_count[2]|clk ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; div_count[2]|clk ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; div_count[3]|clk ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; div_count[3]|clk ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; div_count[4]|clk ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; div_count[4]|clk ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; div_count[5]|clk ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; div_count[5]|clk ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; div_count[6]|clk ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; div_count[6]|clk ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; div_count[7]|clk ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; div_count[7]|clk ;
+--------+--------------+----------------+------------------+-------+------------+------------------+


+-------------------------------------------------------------------------------------------------------+
; Minimum Pulse Width: 'div_clk'                                                                        ;
+--------+--------------+----------------+------------------+---------+------------+--------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock   ; Clock Edge ; Target             ;
+--------+--------------+----------------+------------------+---------+------------+--------------------+
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; div_clk ; Rise       ; clk_count[0]       ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; div_clk ; Rise       ; clk_count[0]       ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; div_clk ; Rise       ; clk_count[1]       ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; div_clk ; Rise       ; clk_count[1]       ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; div_clk ; Rise       ; clk_count[2]       ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; div_clk ; Rise       ; clk_count[2]       ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; div_clk ; Rise       ; count[0]           ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; div_clk ; Rise       ; count[0]           ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; div_clk ; Rise       ; count[1]           ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; div_clk ; Rise       ; count[1]           ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; div_clk ; Rise       ; count[2]           ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; div_clk ; Rise       ; count[2]           ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; div_clk ; Rise       ; count[3]           ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; div_clk ; Rise       ; count[3]           ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; div_clk ; Rise       ; count[4]           ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; div_clk ; Rise       ; count[4]           ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; div_clk ; Rise       ; data_reg[10]       ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; div_clk ; Rise       ; data_reg[10]       ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; div_clk ; Rise       ; din~reg0           ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; div_clk ; Rise       ; din~reg0           ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; div_clk ; Rise       ; sclk~reg0          ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; div_clk ; Rise       ; sclk~reg0          ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; div_clk ; Rise       ; state.ST_Data      ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; div_clk ; Rise       ; state.ST_Data      ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; div_clk ; Rise       ; state.ST_Start     ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; div_clk ; Rise       ; state.ST_Start     ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; div_clk ; Rise       ; state.ST_Stop      ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; div_clk ; Rise       ; state.ST_Stop      ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; div_clk ; Rise       ; sync~reg0          ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; div_clk ; Rise       ; sync~reg0          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; div_clk ; Rise       ; clk_count[0]|clk   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; div_clk ; Rise       ; clk_count[0]|clk   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; div_clk ; Rise       ; clk_count[1]|clk   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; div_clk ; Rise       ; clk_count[1]|clk   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; div_clk ; Rise       ; clk_count[2]|clk   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; div_clk ; Rise       ; clk_count[2]|clk   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; div_clk ; Rise       ; count[0]|clk       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; div_clk ; Rise       ; count[0]|clk       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; div_clk ; Rise       ; count[1]|clk       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; div_clk ; Rise       ; count[1]|clk       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; div_clk ; Rise       ; count[2]|clk       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; div_clk ; Rise       ; count[2]|clk       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; div_clk ; Rise       ; count[3]|clk       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; div_clk ; Rise       ; count[3]|clk       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; div_clk ; Rise       ; count[4]|clk       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; div_clk ; Rise       ; count[4]|clk       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; div_clk ; Rise       ; data_reg[10]|clk   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; div_clk ; Rise       ; data_reg[10]|clk   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; div_clk ; Rise       ; din~reg0|clk       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; div_clk ; Rise       ; din~reg0|clk       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; div_clk ; Rise       ; div_clk|regout     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; div_clk ; Rise       ; div_clk|regout     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; div_clk ; Rise       ; sclk~reg0|clk      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; div_clk ; Rise       ; sclk~reg0|clk      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; div_clk ; Rise       ; state.ST_Data|clk  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; div_clk ; Rise       ; state.ST_Data|clk  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; div_clk ; Rise       ; state.ST_Start|clk ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; div_clk ; Rise       ; state.ST_Start|clk ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; div_clk ; Rise       ; state.ST_Stop|clk  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; div_clk ; Rise       ; state.ST_Stop|clk  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; div_clk ; Rise       ; sync~reg0|clk      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; div_clk ; Rise       ; sync~reg0|clk      ;
+--------+--------------+----------------+------------------+---------+------------+--------------------+


+-----------------------------------------------------------------------+
; Clock to Output Times                                                 ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; din       ; div_clk    ; 8.939 ; 8.939 ; Rise       ; div_clk         ;
; sclk      ; div_clk    ; 8.976 ; 8.976 ; Rise       ; div_clk         ;
; sync      ; div_clk    ; 8.951 ; 8.951 ; Rise       ; div_clk         ;
+-----------+------------+-------+-------+------------+-----------------+


+-----------------------------------------------------------------------+
; Minimum Clock to Output Times                                         ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; din       ; div_clk    ; 8.939 ; 8.939 ; Rise       ; div_clk         ;
; sclk      ; div_clk    ; 8.976 ; 8.976 ; Rise       ; div_clk         ;
; sync      ; div_clk    ; 8.951 ; 8.951 ; Rise       ; div_clk         ;
+-----------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------+
; Setup Transfers                                                   ;
+------------+----------+----------+----------+----------+----------+
; From Clock ; To Clock ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+----------+----------+----------+----------+----------+
; clk        ; clk      ; 124      ; 0        ; 0        ; 0        ;
; div_clk    ; clk      ; 1        ; 1        ; 0        ; 0        ;
; div_clk    ; div_clk  ; 136      ; 0        ; 0        ; 0        ;
+------------+----------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+-------------------------------------------------------------------+
; Hold Transfers                                                    ;
+------------+----------+----------+----------+----------+----------+
; From Clock ; To Clock ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+----------+----------+----------+----------+----------+
; clk        ; clk      ; 124      ; 0        ; 0        ; 0        ;
; div_clk    ; clk      ; 1        ; 1        ; 0        ; 0        ;
; div_clk    ; div_clk  ; 136      ; 0        ; 0        ; 0        ;
+------------+----------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 1     ; 1    ;
; Unconstrained Input Port Paths  ; 24    ; 24   ;
; Unconstrained Output Ports      ; 3     ; 3    ;
; Unconstrained Output Port Paths ; 3     ; 3    ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit TimeQuest Timing Analyzer
    Info: Version 11.0 Build 157 04/27/2011 SJ Full Version
    Info: Processing started: Thu May 25 23:43:39 2017
Info: Command: quartus_sta dac7512 -c dac7512
Info: qsta_default_script.tcl version: #1
Info: Parallel compilation is enabled and will use 2 of the 2 processors detected
Critical Warning: Synopsys Design Constraints File file not found: 'dac7512.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info: No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info: Deriving Clocks
    Info: create_clock -period 1.000 -name div_clk div_clk
    Info: create_clock -period 1.000 -name clk clk
Critical Warning: Timing requirements not met
Info: Worst-case setup slack is -4.572
    Info:     Slack End Point TNS Clock 
    Info: ========= ============= =====================
    Info:    -4.572       -56.839 div_clk 
    Info:    -2.903       -26.019 clk 
Info: Worst-case hold slack is -1.523
    Info:     Slack End Point TNS Clock 
    Info: ========= ============= =====================
    Info:    -1.523        -1.523 clk 
    Info:     1.108         0.000 div_clk 
Info: No Recovery paths to report
Info: No Removal paths to report
Info: Worst-case minimum pulse width slack is -1.583
    Info:     Slack End Point TNS Clock 
    Info: ========= ============= =====================
    Info:    -1.583       -25.307 clk 
    Info:    -1.318       -39.540 div_clk 
Info: The selected device family is not supported by the report_metastability command.
Info: Design is not fully constrained for setup requirements
Info: Design is not fully constrained for hold requirements
Info: Quartus II 64-Bit TimeQuest Timing Analyzer was successful. 0 errors, 2 warnings
    Info: Peak virtual memory: 353 megabytes
    Info: Processing ended: Thu May 25 23:43:40 2017
    Info: Elapsed time: 00:00:01
    Info: Total CPU time (on all processors): 00:00:02


